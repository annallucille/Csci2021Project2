* (TEST 29) batt_update() 7291 P
COMMENTS:
** program: ./test_hybrid_batt_update "batt_update() 7291 P"

** --- Failure messages --- 
- FAILURE(139) due to SIGSEGV (segmentation fault) from OS
- FAILURE: Valgrind reports reachable memory, may need to add free() or fclose()
- FAILURE: Output Mismatch at lines marked

** --- Side by Side Differences ---
- Expect output in: test-results/raw/prob1-29-expect.tmp
- Actual output in: test-results/raw/prob1-29-actual.tmp
- Differing lines have a character like '|' '>' or '<' in the middle
#+BEGIN_SRC sbs-diff
==== EXPECT ====                                             ==== ACTUAL ====                                          
{                                                            {
    // call batt_update() with given sensor and status           // call batt_update() with given sensor and status
    BATT_VOLTAGE_PORT = 7291;                                    BATT_VOLTAGE_PORT = 7291;
    BATT_STATUS_PORT  = 0b011011; // Percent mode                BATT_STATUS_PORT  = 0b011011; // Percent mode
    BATT_DISPLAY_PORT = -1;                                      BATT_DISPLAY_PORT = -1;
    int ret = batt_update();                                     int ret = batt_update();
    printf("ret: %d\n",ret);                                     printf("ret: %d\n",ret);
    printf("\n");  print_ports();  printf("\n");                 printf("\n");  print_ports();  printf("\n");
    printf("Display based on BATT_DISPLAY_PORT:\n");             printf("Display based on BATT_DISPLAY_PORT:\n");
    print_batt_display();                                        print_batt_display();
}                                                            }
---OUTPUT---                                                 ---OUTPUT---
ret: 0                                                     <
                                                           <
BATT_VOLTAGE_PORT  : 7291                                  <
BATT_STATUS_PORT   : 000 11011                             <
BATT_DISPLAY_PORT  : 000 01111 0000000 1111111 0111111 001 <
index              :  29    24      17      10       3   0 <
                                                           <
Display based on BATT_DISPLAY_PORT:                        <
+-^^^-+         ####  ####                                 <
|     |         #  #  #  #                                 <
|#####|         #  #  #  #                                 <
|#####|         ####  #  #                                 <
|#####|         #  #  #  #  %                              <
|#####|         #  #  #  #                                 <
+-----+         ####  ####                                 <
#+END_SRC

** --- Line Differences ---
EXPECT:  13) ret: 0
EXPECT:  14) 
EXPECT:  15) BATT_VOLTAGE_PORT  : 7291
EXPECT:  16) BATT_STATUS_PORT   : 000 11011
EXPECT:  17) BATT_DISPLAY_PORT  : 000 01111 0000000 1111111 0111111 001
EXPECT:  18) index              :  29    24      17      10       3   0
EXPECT:  19) 
EXPECT:  20) Display based on BATT_DISPLAY_PORT:
EXPECT:  21) +-^^^-+         ####  ####     
EXPECT:  22) |     |         #  #  #  #     
EXPECT:  23) |#####|         #  #  #  #     
EXPECT:  24) |#####|         ####  #  #     
EXPECT:  25) |#####|         #  #  #  #  %  
EXPECT:  26) |#####|         #  #  #  #     
EXPECT:  27) +-----+         ####  ####     

--- Valgrind Log from: test-results/raw/prob1-29-valgrd.tmp ---
==3887989== Memcheck, a memory error detector
==3887989== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==3887989== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==3887989== Command: ./test_hybrid_batt_update batt_update()\ 7291\ P
==3887989== Parent PID: 3887988
==3887989== 
==3887989== Invalid write of size 2
==3887989==    at 0x10B901: ??? (batt_update_asm.s:17)
==3887989==    by 0x48D6082: (below main) (libc-start.c:308)
==3887989==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==3887989== 
==3887989== 
==3887989== Process terminating with default action of signal 11 (SIGSEGV)
==3887989==  Access not within mapped region at address 0x0
==3887989==    at 0x10B901: ??? (batt_update_asm.s:17)
==3887989==    by 0x48D6082: (below main) (libc-start.c:308)
==3887989==  If you believe this happened as a result of a stack
==3887989==  overflow in your program's main thread (unlikely but
==3887989==  possible), you can try to increase the size of the
==3887989==  main thread stack using the --main-stacksize= flag.
==3887989==  The main thread stack size used in this run was 8388608.
==3887989== 
==3887989== HEAP SUMMARY:
==3887989==     in use at exit: 8 bytes in 2 blocks
==3887989==   total heap usage: 2 allocs, 0 frees, 8 bytes allocated
==3887989== 
==3887989== 4 bytes in 1 blocks are still reachable in loss record 1 of 2
==3887989==    at 0x483B7F3: malloc (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==3887989==    by 0x109373: main (test_batt_update.c:39)
==3887989== 
==3887989== 4 bytes in 1 blocks are still reachable in loss record 2 of 2
==3887989==    at 0x483B7F3: malloc (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==3887989==    by 0x109384: main (test_batt_update.c:40)
==3887989== 
==3887989== LEAK SUMMARY:
==3887989==    definitely lost: 0 bytes in 0 blocks
==3887989==    indirectly lost: 0 bytes in 0 blocks
==3887989==      possibly lost: 0 bytes in 0 blocks
==3887989==    still reachable: 8 bytes in 2 blocks
==3887989==         suppressed: 0 bytes in 0 blocks
==3887989== 
==3887989== For lists of detected and suppressed errors, rerun with: -s
==3887989== ERROR SUMMARY: 2 errors from 1 contexts (suppressed: 0 from 0)

