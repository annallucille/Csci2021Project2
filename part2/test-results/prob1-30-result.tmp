* (TEST 30) batt_update() error
COMMENTS:
** program: ./test_batt_update "batt_update() error"

** --- Failure messages --- 
- FAILURE(139) due to SIGSEGV (segmentation fault) from OS
- FAILURE: Valgrind reports reachable memory, may need to add free() or fclose()
- FAILURE: Output Mismatch at lines marked

** --- Side by Side Differences ---
- Expect output in: test-results/raw/prob1-30-expect.tmp
- Actual output in: test-results/raw/prob1-30-actual.tmp
- Differing lines have a character like '|' '>' or '<' in the middle
#+BEGIN_SRC sbs-diff
==== EXPECT ====                                                       ==== ACTUAL ====                                                    
{                                                                      {
    // call batt_update() with negative voltage reading which should       // call batt_update() with negative voltage reading which should
    // bail out without changing anything.                                 // bail out without changing anything.
    BATT_VOLTAGE_PORT = -6421;  // Negative value causes error out         BATT_VOLTAGE_PORT = -6421;  // Negative value causes error out
    BATT_STATUS_PORT  = 0b111011; // Percent mode                          BATT_STATUS_PORT  = 0b111011; // Percent mode
    BATT_DISPLAY_PORT = -1;                                                BATT_DISPLAY_PORT = -1;
    int ret = batt_update();                                               int ret = batt_update();
    printf("ret: %d\n",ret);                                               printf("ret: %d\n",ret);
    printf("\n");  print_ports();  printf("\n");                           printf("\n");  print_ports();  printf("\n");
    printf("Display based on BATT_DISPLAY_PORT:\n");                       printf("Display based on BATT_DISPLAY_PORT:\n");
    print_batt_display();                                                  print_batt_display();
}                                                                      }
---OUTPUT---                                                           ---OUTPUT---
ret: 1                                                               <
                                                                     <
BATT_VOLTAGE_PORT  : -6421                                           <
BATT_STATUS_PORT   : 001 11011                                       <
BATT_DISPLAY_PORT  : 111 11111 1111111 1111111 1111111 111           <
index              :  29    24      17      10       3   0           <
                                                                     <
Display based on BATT_DISPLAY_PORT:                                  <
+-^^^-+  ####   ####  ####                                           <
|#####|  #  #   #  #  #  #                                           <
|#####|  #  #   #  #  #  #                                           <
|#####|  ####   ####  ####  V                                        <
|#####|  #  #   #  #  #  #  %                                        <
|#####|  #  #   #  #  #  #                                           <
+-----+  #### o ####  ####                                           <
#+END_SRC

** --- Line Differences ---
EXPECT:  14) ret: 1
EXPECT:  15) 
EXPECT:  16) BATT_VOLTAGE_PORT  : -6421
EXPECT:  17) BATT_STATUS_PORT   : 001 11011
EXPECT:  18) BATT_DISPLAY_PORT  : 111 11111 1111111 1111111 1111111 111
EXPECT:  19) index              :  29    24      17      10       3   0
EXPECT:  20) 
EXPECT:  21) Display based on BATT_DISPLAY_PORT:
EXPECT:  22) +-^^^-+  ####   ####  ####     
EXPECT:  23) |#####|  #  #   #  #  #  #     
EXPECT:  24) |#####|  #  #   #  #  #  #     
EXPECT:  25) |#####|  ####   ####  ####  V  
EXPECT:  26) |#####|  #  #   #  #  #  #  %  
EXPECT:  27) |#####|  #  #   #  #  #  #     
EXPECT:  28) +-----+  #### o ####  ####     

--- Valgrind Log from: test-results/raw/prob1-30-valgrd.tmp ---
==2201774== Memcheck, a memory error detector
==2201774== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==2201774== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==2201774== Command: ./test_batt_update batt_update()\ error
==2201774== Parent PID: 2201773
==2201774== 
==2201774== Stack overflow in thread #1: can't grow stack to 0x1ffe801000
==2201774== 
==2201774== Process terminating with default action of signal 11 (SIGSEGV)
==2201774==  Access not within mapped region at address 0x1FFE801FF8
==2201774== Stack overflow in thread #1: can't grow stack to 0x1ffe801000
==2201774==    at 0x10B956: ??? (batt_update_asm.s:98)
==2201774==  If you believe this happened as a result of a stack
==2201774==  overflow in your program's main thread (unlikely but
==2201774==  possible), you can try to increase the size of the
==2201774==  main thread stack using the --main-stacksize= flag.
==2201774==  The main thread stack size used in this run was 8388608.
==2201774== Stack overflow in thread #1: can't grow stack to 0x1ffe801000
==2201774== 
==2201774== Process terminating with default action of signal 11 (SIGSEGV)
==2201774==  Access not within mapped region at address 0x1FFE801FF0
==2201774== Stack overflow in thread #1: can't grow stack to 0x1ffe801000
==2201774==    at 0x4831134: _vgnU_freeres (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_core-amd64-linux.so)
==2201774==  If you believe this happened as a result of a stack
==2201774==  overflow in your program's main thread (unlikely but
==2201774==  possible), you can try to increase the size of the
==2201774==  main thread stack using the --main-stacksize= flag.
==2201774==  The main thread stack size used in this run was 8388608.
==2201774== 
==2201774== HEAP SUMMARY:
==2201774==     in use at exit: 8 bytes in 2 blocks
==2201774==   total heap usage: 2 allocs, 0 frees, 8 bytes allocated
==2201774== 
==2201774== 4 bytes in 1 blocks are still reachable in loss record 1 of 2
==2201774==    at 0x483B7F3: malloc (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==2201774==    by 0x109373: main (test_batt_update.c:39)
==2201774== 
==2201774== 4 bytes in 1 blocks are still reachable in loss record 2 of 2
==2201774==    at 0x483B7F3: malloc (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==2201774==    by 0x109384: main (test_batt_update.c:40)
==2201774== 
==2201774== LEAK SUMMARY:
==2201774==    definitely lost: 0 bytes in 0 blocks
==2201774==    indirectly lost: 0 bytes in 0 blocks
==2201774==      possibly lost: 0 bytes in 0 blocks
==2201774==    still reachable: 8 bytes in 2 blocks
==2201774==         suppressed: 0 bytes in 0 blocks
==2201774== 
==2201774== For lists of detected and suppressed errors, rerun with: -s
==2201774== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)

