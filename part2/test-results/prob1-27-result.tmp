* (TEST 27) set_display_from_batt() error
COMMENTS:
** program: ./test_batt_update "set_display_from_batt() error"

** --- Failure messages --- 
- FAILURE: Output Mismatch at lines marked

** --- Side by Side Differences ---
- Expect output in: test-results/raw/prob1-27-expect.tmp
- Actual output in: test-results/raw/prob1-27-actual.tmp
- Differing lines have a character like '|' '>' or '<' in the middle
#+BEGIN_SRC sbs-diff
==== EXPECT ====                                             ==== ACTUAL ====                                          
{                                                            {
    // Should detect negative voltage and error out              // Should detect negative voltage and error out
    BATT_VOLTAGE_PORT = -1;                                      BATT_VOLTAGE_PORT = -1;
    BATT_STATUS_PORT  = -1;                                      BATT_STATUS_PORT  = -1;
    BATT_DISPLAY_PORT = -1;                                      BATT_DISPLAY_PORT = -1;
    batt_t batt = {                                              batt_t batt = {
      .mlvolts = -3421,                                            .mlvolts = -3421,
      .percent = 0,                                                .percent = 0,
      .mode = 1,                                                   .mode = 1,
    };                                                           };
    *dispint = -1;        // should not change from -1           *dispint = -1;        // should not change from -1
    int ret = set_display_from_batt(batt, dispint);              int ret = set_display_from_batt(batt, dispint);
    printf("ret: %d\n",ret);                                     printf("ret: %d\n",ret);
    printf("%-18s : %s\n%-18s : %s\n",                           printf("%-18s : %s\n%-18s : %s\n",
           "dispint bits", bitstr(*dispint, INT_BITS),                  "dispint bits", bitstr(*dispint, INT_BITS),
           "index", bitstr_index(INT_BITS));                            "index", bitstr_index(INT_BITS));
    printf("\n");  print_ports();  printf("\n");                 printf("\n");  print_ports();  printf("\n");
    BATT_DISPLAY_PORT = *dispint;                                BATT_DISPLAY_PORT = *dispint;
    printf("Display based on dispint:\n");                       printf("Display based on dispint:\n");
    print_batt_display();                                        print_batt_display();
}                                                            }
---OUTPUT---                                                 ---OUTPUT---
ret: 0                                                       ret: 0
dispint bits       : 000 00000 0000000 0000000 0111111 001 | dispint bits       : 111 11111 1111111 1111111 1111111 111
index              :  29    24      17      10       3   0   index              :  29    24      17      10       3   0

BATT_VOLTAGE_PORT  : -1                                      BATT_VOLTAGE_PORT  : -1
BATT_STATUS_PORT   : 111 11111                               BATT_STATUS_PORT   : 111 11111
BATT_DISPLAY_PORT  : 111 11111 1111111 1111111 1111111 111   BATT_DISPLAY_PORT  : 111 11111 1111111 1111111 1111111 111
index              :  29    24      17      10       3   0   index              :  29    24      17      10       3   0

Display based on dispint:                                    Display based on dispint:
+-^^^-+               ####                                 | +-^^^-+  ####   ####  ####     
|     |               #  #                                 | |#####|  #  #   #  #  #  #     
|     |               #  #                                 | |#####|  #  #   #  #  #  #     
|     |               #  #                                 | |#####|  ####   ####  ####  V  
|     |               #  #  %                              | |#####|  #  #   #  #  #  #  %  
|     |               #  #                                 | |#####|  #  #   #  #  #  #     
+-----+               ####                                 | +-----+  #### o ####  ####     
#+END_SRC

** --- Line Differences ---
EXPECT:  24) dispint bits       : 000 00000 0000000 0000000 0111111 001
ACTUAL:  24) dispint bits       : 111 11111 1111111 1111111 1111111 111
EXPECT:  33) +-^^^-+               ####     
EXPECT:  34) |     |               #  #     
EXPECT:  35) |     |               #  #     
EXPECT:  36) |     |               #  #     
EXPECT:  37) |     |               #  #  %  
EXPECT:  38) |     |               #  #     
EXPECT:  39) +-----+               ####     
ACTUAL:  33) +-^^^-+  ####   ####  ####     
ACTUAL:  34) |#####|  #  #   #  #  #  #     
ACTUAL:  35) |#####|  #  #   #  #  #  #     
ACTUAL:  36) |#####|  ####   ####  ####  V  
ACTUAL:  37) |#####|  #  #   #  #  #  #  %  
ACTUAL:  38) |#####|  #  #   #  #  #  #     
ACTUAL:  39) +-----+  #### o ####  ####     

--- Valgrind Log from: test-results/raw/prob1-27-valgrd.tmp ---
==2198508== Memcheck, a memory error detector
==2198508== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==2198508== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==2198508== Command: ./test_batt_update set_display_from_batt()\ error
==2198508== Parent PID: 2198507
==2198508== 
==2198508== 
==2198508== HEAP SUMMARY:
==2198508==     in use at exit: 0 bytes in 0 blocks
==2198508==   total heap usage: 2 allocs, 2 frees, 8 bytes allocated
==2198508== 
==2198508== All heap blocks were freed -- no leaks are possible
==2198508== 
==2198508== For lists of detected and suppressed errors, rerun with: -s
==2198508== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)

